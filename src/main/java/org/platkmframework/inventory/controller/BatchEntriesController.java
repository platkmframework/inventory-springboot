/*******************************************************************************
Code generated by platkmframework 
*******************************************************************************/


package org.platkmframework.inventory.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.data.domain.Page;

import java.util.List;

import org.platkmframework.inventory.domain.service.BatchEntriesService;
import org.platkmframework.inventory.domain.vo.BatchEntriesVO;

@RestController
@RequestMapping("/batchentries")
public class BatchEntriesController{

  @Autowired
  private BatchEntriesService batchentriesService;

  @GetMapping("/criteria")
  public Page<BatchEntriesVO> criteriaBatchEntries(@RequestParam(defaultValue = "0", name="page") int page, 
		  @RequestParam(defaultValue = "10", name="size") int size){
       return  batchentriesService.criteriaBatchEntries(page, size);
  }

  @GetMapping("/list")
  public List<BatchEntriesVO> listBatchEntries(){
       return  batchentriesService.listBatchEntries();
  }

  @PostMapping
   public BatchEntriesVO createBatchEntries(@RequestBody BatchEntriesVO  batchentriesVO) {
        return  batchentriesService.createBatchEntries( batchentriesVO);
    }

    @GetMapping("/{id}")
    public ResponseEntity<BatchEntriesVO> getBatchEntriesById(@PathVariable(name="id")  java.lang.Long entryId) {
        return  batchentriesService.getBatchEntriesById(entryId)
                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.notFound().build());
    }

    @PutMapping
    public ResponseEntity<BatchEntriesVO> updateBatchEntries(@RequestBody BatchEntriesVO  batchentries) {
        return  batchentriesService.updateBatchEntries(batchentries)
                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.notFound().build());
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> removeBatchEntries(@PathVariable(name="id") java.lang.Long entryId) {
        return batchentriesService.removeBatchEntries(entryId) ?
                ResponseEntity.noContent().build() :
                ResponseEntity.notFound().build();
    }

}