/*******************************************************************************
Code generated by platkmframework 
*******************************************************************************/


package org.platkmframework.inventory.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.data.domain.Page;

import java.util.List;

import org.platkmframework.inventory.domain.service.BatchMovementsService;
import org.platkmframework.inventory.domain.vo.BatchMovementsVO;

@RestController
@RequestMapping("/batchmovements")
public class BatchMovementsController{

  @Autowired
  private BatchMovementsService batchmovementsService;

  @GetMapping("/criteria")
  public Page<BatchMovementsVO> criteriaBatchMovements(@RequestParam(defaultValue = "0", name="page") int page, 
		  @RequestParam(defaultValue = "10", name="size") int size){
       return  batchmovementsService.criteriaBatchMovements(page, size);
  }

  @GetMapping("/list")
  public List<BatchMovementsVO> listBatchMovements(){
       return  batchmovementsService.listBatchMovements();
  }

  @PostMapping
   public BatchMovementsVO createBatchMovements(@RequestBody BatchMovementsVO  batchmovementsVO) {
        return  batchmovementsService.createBatchMovements( batchmovementsVO);
    }

    @GetMapping("/{id}")
    public ResponseEntity<BatchMovementsVO> getBatchMovementsById(@PathVariable(name="id")  java.lang.Long movementId) {
        return  batchmovementsService.getBatchMovementsById(movementId)
                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.notFound().build());
    }

    @PutMapping
    public ResponseEntity<BatchMovementsVO> updateBatchMovements(@RequestBody BatchMovementsVO  batchmovements) {
        return  batchmovementsService.updateBatchMovements(batchmovements)
                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.notFound().build());
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> removeBatchMovements(@PathVariable(name="id") java.lang.Long movementId) {
        return batchmovementsService.removeBatchMovements(movementId) ?
                ResponseEntity.noContent().build() :
                ResponseEntity.notFound().build();
    }

}